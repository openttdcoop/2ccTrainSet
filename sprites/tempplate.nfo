// Automatically generated by GRFCODEC. Do not modify!
// (Info version 7)
// Initial sprite with line count. Leave it empty because NFORenum will fix it for you.
-1 * 0  00 00 00 00

// Action 8: define GRF version (07), GRFID (number), Name and Description.
-1 * 0	 08 07 05 "TP" 01 "Tempplate test" 00 "Drawn and Coded by DJ Nekkid" 00

//  Misc
-1 * 9	 0D 9E 08 9E FF 08 00 00 00 // Draw all 32 px in the depot view
-1 * 9	 0D 8E \D= FF 00 02 00 00 00 // Drop 2px in depot view

-1 * 0  04 00 FF 01 \wxd0E0 "Use only trains of the same type" 00
-1 * 0  04 00 7F 01 00 "Testtrain (Electric)" 00

//MU Wagon - PAX
-1 * 0  00 00 \b21 01 1B 00 \w1920-01-01 04 \b255 05 00 06 07 07 08 09 \wx0 12 FD 14 \b75 15 00 16 \b50 17 \b192 1C 00 21 00 27 02 28 \w1 29 \w1018 1A 00  1E 16 2A \d0 0E \dx4c30 0D \b10

-1 * 0  01 00 01 01
// Format: spritenum pcxfile 	xpos 	ypos 	comp	ysize 	xsize 	xrel 	yrel	dir
-1 sprites/mus/pcx/muwag.pcx  	1 	1 	01 	12	63	-25 -8	
-1 * 0  02 00 A0 01 01 \w0 \w0
-1 * 0  03 00 01 1B 00 A0 00

// Action 0
-1 * 0  00 00 \b29 01 00 // ID 00
// Game related props 
  02 \b01   // Reliability Decay
  03 \b30   // Vehicle Life/Years
  04 \b255  // Model Life/Years
  05 00     // Track type; 00 Rail, 01 Mono, 02 Mlev
  06 07     // Climate availability
  07 \b10   // Loading Speed - Not needed in most cases
  08 01     // AI Pax optimized
   
// Physical properties
  00 \w1995-01-01 // Intro year \wyyyy-mm-dd
  09 \w300  // Speed (word)
  0B \w12000 // Power in HP (word)
  1F \b60   // Tractive effort
  16 \b65   // Weight/Tons
  20 20     // Air Drag

// Economical properties
  14 \b80   // Cargo Capacity
  15 00     // Cargo Type
  1D \dx0   // Refit bitmask
  28 \wx0b  // New cargo
  29 \wx3f0 // New NOT Cargo
  0D \b100  // Running Cost Factor
  0E \dx3c30 // Running cost Base
  17 40     // Cost Factor
  1C 00     // Refit cost

// Misc
  12 FD     // Use new grapics
  19 28     // Traction Type; 00 Steam, 08 Diesel, 28 Electric, 32 Mono, 38 Mlev
  22 30     // Set visual effect, sparks, fumes, etc
  13 00     // Dualhead? 00/01 (should "always" be 0)
  1E FF     // Callbacks
  21 00     // Shorter vehicle
  27 06     // 01 tilt + 02 2cc + 04 xMU


// Action 1 with 5 views and 8 sprites each view
-1 * 0  01 00 05 08
// Front/White lights
1 sprites/mus/pcx/test.pcx	01	01	1	24	08	-3	-12
2 sprites/mus/pcx/test.pcx	10	01	1	18	22	-14	-10
3 sprites/mus/pcx/test.pcx	33	01	1	14	32	-16	-10
4 sprites/mus/pcx/test.pcx	66	01	1	18	22	-6	-10
5 sprites/mus/pcx/test.pcx	89	01	1	24	08	-3	-12
6 sprites/mus/pcx/test.pcx	98	01	1	18	22	-14	-10
7 sprites/mus/pcx/test.pcx	121	01	1	14	32	-16	-10
8 sprites/mus/pcx/test.pcx	154	01	1	18	22	-6	-10
// End/Red lights
5 sprites/mus/pcx/test.pcx	89	32	1	24	08	-3	-12
6 sprites/mus/pcx/test.pcx	98	32	1	18	22	-14	-10
7 sprites/mus/pcx/test.pcx	121	32	1	14	32	-16	-10
8 sprites/mus/pcx/test.pcx	154	32	1	18	22	-6	-10
1 sprites/mus/pcx/test.pcx	01	32	1	24	08	-3	-12
2 sprites/mus/pcx/test.pcx	10	32	1	18	22	-14	-10
3 sprites/mus/pcx/test.pcx	33	32	1	14	32	-16	-10
4 sprites/mus/pcx/test.pcx	66	32	1	18	22	-6	-10
// Pax
1 sprites/mus/pcx/test.pcx	01	64	1	24	08	-3	-12
2 sprites/mus/pcx/test.pcx	10	64	1	18	22	-14	-10
3 sprites/mus/pcx/test.pcx	33	64	1	14	32	-16	-10
4 sprites/mus/pcx/test.pcx	66	64	1	18	22	-6	-10
5 sprites/mus/pcx/test.pcx	89	64	1	24	08	-3	-12
6 sprites/mus/pcx/test.pcx	98	64	1	18	22	-14	-10
7 sprites/mus/pcx/test.pcx	121	64	1	14	32	-16	-10
8 sprites/mus/pcx/test.pcx	154	64	1	18	22	-6	-10
// Mail
1 sprites/mus/pcx/test.pcx	01	96	1	24	08	-3	-12
2 sprites/mus/pcx/test.pcx	10	96	1	18	22	-14	-10
3 sprites/mus/pcx/test.pcx	33	96	1	14	32	-16	-10
4 sprites/mus/pcx/test.pcx	66	96	1	18	22	-6	-10
5 sprites/mus/pcx/test.pcx	89	96	1	24	08	-3	-12
6 sprites/mus/pcx/test.pcx	98	96	1	18	22	-14	-10
7 sprites/mus/pcx/test.pcx	121	96	1	14	32	-16	-10
8 sprites/mus/pcx/test.pcx	154 96	1	18	22	-6	-10
// P-list
1 * 0  0
2 * 0  0
3 sprites/mus/pcx/test.pcx	01	01  1 01  01  -00 -00
4 * 0  0
5 * 0  0
6 * 0  0
7 sprites/mus/pcx/test.pcx	01	128	1	12	87	-40	-08
8 * 0  0

-1 * 0  02 00 10 01 01 \w0 \w0 // ##>
-1 * 0  02 00 11 01 01 \w1 \w1 // <##
-1 * 0  02 00 20 01 01 \w2 \w2 // pax
-1 * 0  02 00 30 01 01 \w3 \w3 // mail
-1 * 0  02 00 40 01 01 \w4 \w4 // P-list

// ----- Apply P-list text -----
-1 * 0  02 00 4F 81 0C 00 FF 01   E0 80 23 23   40 00

// --------------------
// ----- Generic ------
// --------------------

// Loading speed of the various cargos
-1 * 0  02 00 E1 81 47 10 FF 04
                      \b15 80 02 02 // Mail 
                      \b10 80 08 08 // Armored 
                      \b20 80 01 01 // PAX
                      \b20 80 05 05 // Tourists
                      \b00 80       // others 
                    

                      
//Capacty for use in CB15/36 
// x = 0 if <capacity> < 255, if more then 255, add 1 and substract 255 (i.e. 256 capacity is \b01 81) ---
-1 * 0  02 00 E5 81 47 10 FF 04
                           \b41 80 02 02 // Mail Capacity 41
                           \b30 80 08 08 // Armored capacity 30
                           \b60 80 05 05 // Tourist capacity 60
                           \b80 80 01 01 // Pax capacity 80
                           \b00 80       // Everything else
                           
//Low cost when standing still, for use in the '10' at the running cost spot
-1 * 0  02 00 ED 82 B4 00 FF 01        // 1 case
                         \b10 80 00 00 // Standing still cost 
                        \b100 80       // Running cost


// '10' for CB36s w/high Runningcost
-1 * 0  02 00 EF 81 10 00 FF 03
                             E5 00 14 14 // Capacity
                           \b50 80 16 16 // weight
                             ED 00 0D 0D // running cost
                             40 00       // Dont matter


// --------------------
// ------ Engine ------
// --------------------

// Cannot attach 
-1 * 0  02 00 A6 81 C6 00 FF 02          // 2 cases
                             FF 80 1B 1B // allow attaching MU-wagon
                             FF 80 00 00 // Allow attaching self
                             E0 80       // Dissalow everything else
-1 * 0  02 00 AF 81 0C 00 FF 04          // 3 callbacks
                             E1 00 12 12 // Loading speed
                             E5 00 15 15 // Cargo Capacity
                             A6 00 1D 1D // Cannot attach 
                             EF 00 36 36 // New stuff
                             10 00       // Attach engine gfx

// --------------------
// ------ Wagon -------
// --------------------

// GFX depending on what it carries 
-1 * 0  02 00 50 81 47 10 FF 02
                             30 00 02 02 // Mail gfx
                             30 00 08 08 // Armored gfx
                             20 00       // Tourist/pax gfx

// GFX depending on pos in consist
-1 * 0  02 00 51 81 41 08 FF 01          // 1 case, counted from behind
                             11 00 00 00 // Back engine if last
                             50 00       // GFX depending on cargo if not last


-1 * 0  02 00 5F 81 0C 00 FF 03          // 3 callbacks
                             E1 00 12 12 // Loading speed
                             E5 00 15 15 // Cargo Capacity
                             EF 00 36 36 // Change props
                             51 00       // Attach GFX



// Action 3's
-1 * 0  03 00 01 00 01 // Id 00
              fF 4F 00 // P-list
              AF 00    // Normal
-1 * 0  03 00 81 1B  00 5F 00 // Livery Override 